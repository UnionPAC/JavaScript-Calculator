{"version":3,"sources":["index.js","App.js"],"names":["ReactDOM","render","StrictMode","document","getElementById","nums","ops","ids","App","state","lastPressed","undefined","calc","operation","handleClick","e","innerText","target","setState","evaulated","eval","splitted","split","last","slice","includes","lastNumberIndex","reverse","findIndex","char","length","this","className","id","onClick","map","num","op","React","Component"],"mappings":"qIAAA,sEAMAA,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U,iwDCNpBC,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCC,IAAM,CAAE,IAAK,IAAK,IAAK,KACvBC,IAAM,CACV,EAAG,QACH,EAAG,QACH,EAAG,OACH,EAAG,OACH,EAAG,OACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,QACH,EAAG,OACH,IAAK,SACL,IAAK,WACL,IAAK,WACL,IAAK,OAGDC,I,g5BACNC,MAAQ,CACJC,iBAAaC,EACbC,KAAM,IACNC,eAAWF,G,MAEXG,YAAc,SAACC,GAEX,gBAA8B,MAAKN,MAA3BG,KAAR,YAAQA,KAAMF,YAAd,YAAcA,YACNM,UAAcD,EAAEE,OAAhBD,UAER,OAAOA,WACH,IAAK,KACD,MAAKE,SAAS,CACVN,KAAM,IACNC,eAAWF,EACXD,iBAAaC,IAEjB,MAEJ,IAAK,IACD,IAAMQ,UAAYC,KAAKR,MACvB,MAAKM,SAAS,CACVN,KAAMO,YAEV,MAEJ,IAAK,IAEL,IAAME,SAAWT,KAAKU,MAAM,cACtBC,KAAOF,SAASG,OAAO,GAAG,GAEhC,GAAID,KAAKE,SAAS,KAMhB,MALA,MAAKP,SAAS,CACZN,KAAMA,KAAK,MAMf,QACE,IAAIG,QAAIJ,EAIR,GAAIL,IAAImB,SAAST,WACf,GAAIV,IAAImB,SAASf,cAA8B,MAAdM,UAAmB,CAClD,IAAMU,gBAAkBd,KAAKU,MAAM,IAAIK,UACtCC,WAAU,SAAAC,GAAI,MAAa,MAATA,GAAgBxB,KAAKoB,UAAUI,MAClDd,GAAIH,KAAKY,MAAM,EAAGZ,KAAKkB,OAASJ,iBAA5B,WAAmDV,UAAnD,UAEJD,GAAC,UAAMH,KAAN,YAAcI,UAAd,UAGHD,GAAc,MAATH,KAAgBI,UAAYJ,KAAOI,UAG1C,MAAKE,SAAS,CACZN,KAAMG,KAIV,MAAKG,SAAS,CACZR,YAAaM,c,6PAOzB,WAAU,IAAD,OACCJ,EAASmB,KAAKtB,MAAdG,KAER,OACE,mEAAKoB,UAAU,aAAf,UAEE,kEAAKC,GAAG,UAAUD,UAAU,UAA5B,SACCpB,IAGD,mEAAKoB,UAAU,iBAAf,UACE,qEACEA,UAAU,sBACVE,QAASH,KAAKjB,YACdmB,GAAG,QAHL,gBAQC5B,KAAK8B,KAAI,SAAAC,GAAG,OACX,qEACEJ,UAAS,oBAAuB,IAARI,GAAa,SAErCF,QAAS,EAAKpB,YACdmB,GAAI1B,IAAI6B,GAJV,SAMGA,GAJIA,MAQT,qEACEJ,UAAU,aACVE,QAASH,KAAKjB,YACdmB,GAAG,UAHL,kBAQF,mEAAKD,UAAU,gBAAf,UACG1B,IAAI6B,KAAI,SAAAE,GAAE,OACT,qEACEL,UAAU,SAEVE,QAAS,EAAKpB,YACdmB,GAAI1B,IAAI8B,GAJV,SAMGA,GAJIA,MAQT,qEACEL,UAAU,SACVE,QAASH,KAAKjB,YACdmB,GAAG,SAHL,yB,KAxHQK,6CAAMC,WAqIT/B,4B","file":"static/js/main.814c1107.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from \"react\";\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst nums = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0];\nconst ops = [ '/', '*', '-', '+'];\nconst ids = {\n  7: 'seven', \n  8: 'eight', \n  9: 'nine', \n  4: 'four', \n  5: 'five', \n  6: 'six', \n  1: 'one', \n  2: 'two', \n  3: 'three', \n  0: 'zero',\n  '/': 'divide', \n  '*': 'multiply', \n  '-': 'subtract', \n  '+': 'add'\n}\n\nclass App extends React.Component {\nstate = {\n    lastPressed: undefined,\n    calc: '0',\n    operation: undefined\n}\n    handleClick = (e) => {\n\n        const { calc, lastPressed } = this.state;\n        const { innerText } = e.target;\n\n        switch(innerText) {\n            case 'AC': {\n                this.setState({\n                    calc: '0',\n                    operation: undefined,\n                    lastPressed: undefined\n                });\n                break;\n            }\n            case '=': {\n                const evaulated = eval(calc)\n                this.setState({\n                    calc: evaulated\n                });\n                break;\n            }\n            case '.': {\n              \n            const splitted = calc.split(/[\\+\\-\\*\\/]/)\n            const last = splitted.slice(-1)[0]\n            \n            if(!last.includes(\".\")) {\n              this.setState({\n                calc: calc+'.'\n              });\n            } else\n\n              break;\n            }\n            default: {\n              let e = undefined;\n\n              // check for operation\n\n              if (ops.includes(innerText)) {\n                if (ops.includes(lastPressed) && innerText !== '-') {\n                  const lastNumberIndex = calc.split('').reverse()\n                  .findIndex(char => char !== ' ' && nums.includes(+char))\n                  e = calc.slice(0, calc.length - lastNumberIndex) + ` ${innerText} `;\n                } else {\n                  e = `${calc} ${innerText} `;\n                }\n              } else {\n                e = (calc === '0') ? innerText : calc + innerText;\n              }\n\n              this.setState({\n                calc: e,\n              });\n            }\n\n            this.setState({\n              lastPressed: innerText\n            })\n\n\n        }\n    }\n  \n  render() {\n    const { calc } = this.state;\n\n    return (\n      <div className=\"calculator\">\n       {/*  <p style={{position: 'absolute', top: 0, marginTop: \"30px\"}}>{JSON.stringify(this.state, null, 2)}</p>   */}     \n        <div id=\"display\" className=\"display\">\n        {calc}\n        </div>\n        \n        <div className=\"nums-container\">\n          <button \n            className=\"light-grey big-h ac\" \n            onClick={this.handleClick} \n            id=\"clear\"\n            >\n            AC\n          </button>\n          \n          {nums.map(num => (\n            <button \n              className={`dark-grey ${num === 0 && 'big-h'}`}\n              key={num} \n              onClick={this.handleClick}\n              id={ids[num]}\n             >\n              {num}\n            </button>\n          ))}\n          \n          <button \n            className=\"light-grey\" \n            onClick={this.handleClick} \n            id=\"decimal\"\n           >\n            .\n          </button>\n        </div>\n        <div className=\"ops-container\">\n          {ops.map(op => (\n            <button \n              className=\"orange\" \n              key={op} \n              onClick={this.handleClick}\n              id={ids[op]}\n             >\n              {op}\n            </button>\n          ))}\n          \n          <button \n            className=\"orange\" \n            onClick={this.handleClick} \n            id=\"equals\"\n           >\n            =\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;"],"sourceRoot":""}